1. SELECT model, speed, hd FROM PC WHERE price < 500
2. SELECT DISTINCT  maker FROM Product WHERE type = 'Printer'
3. SELECT Product.model, Laptop.ram, Laptop.screen
FROM Product INNER JOIN Laptop
ON Product.model = Laptop.model WHERE Laptop.price > 1000
4. SELECT * FROM Printer WHERE color = 'y'
5. SELECT model, speed, hd 
FROM PC 
WHERE ((cd = '12x' OR cd = '24x') AND price < 600)
6. SELECT DISTINCT  Product.maker, Laptop.speed
FROM Product INNER JOIN Laptop
ON Product.model = Laptop.model WHERE Laptop.hd >= 10
7. SELECT Laptop.model, Laptop.price
FROM Product INNER JOIN Laptop
ON Product.model = Laptop.model WHERE Product.maker = 'B'
UNION
SELECT Printer.model, Printer.price
FROM Product INNER JOIN Printer
ON Product.model = Printer.model WHERE Product.maker = 'B'
UNION
SELECT PC.model, PC.price
FROM Product INNER JOIN PC
ON Product.model = PC.model WHERE Product.maker = 'B'
8. SELECT DISTINCT maker 
FROM product WHERE type='pc' and maker NOT IN
(SELECT maker FROM product WHERE type='laptop')
9. SELECT DISTINCT Product.maker
FROM Product INNER JOIN PC
ON Product.model = PC.model WHERE PC.speed >= 450
10. SELECT DISTINCT model, price
FROM Printer
WHERE price = (SELECT MAX(price) 
 FROM Printer
 )
11. SELECT AVG(speed) 
 FROM PC
12. SELECT AVG(speed) 
 FROM Laptop WHERE price > 1000
13. SELECT AVG(speed)
FROM Product INNER JOIN PC
ON Product.model = PC.model WHERE Product.maker = 'A'
14. SELECT Classes.class, Ships.name, Classes.country
FROM Classes INNER JOIN Ships 
ON Classes.class= Ships.class WHERE Classes.numGuns >= 10
15. SELECT hd FROM PC 
GROUP BY (hd) 
HAVING COUNT(model) >= 2
16. SELECT DISTINCT p1.model, p2.model, p1.speed, p1.ram
FROM PC as p1, PC as p2
WHERE p1.speed = p2.speed and p1.ram = p2.ram and p1.model > p2.model
17. SELECT DISTINCT Product.type, Laptop.model, Laptop.speed
FROM Product, Laptop, PC
WHERE Laptop.speed < (SELECT MIN (speed) FROM PC) AND 
                      Product.type = 'laptop'
18. SELECT DISTINCT Product.maker, Printer.price
FROM Product INNER JOIN Printer
ON product.model = printer.model
WHERE (Printer.price = (SELECT MIN (price) FROM Printer WHERE Printer.color = 'y')) AND Printer.color = 'y'
19. SELECT Product.maker, AVG(screen) AS Avg_screen
FROM Product, Laptop
WHERE Product.model = Laptop.model
GROUP BY Product.maker
20. SELECT maker, COUNT(model)
FROM Product
WHERE type = 'pc'
GROUP BY (maker) 
HAVING COUNT(DISTINCT model) >= 3
21. SELECT Product.maker, MAX(PC.price)
FROM Product INNER JOIN PC
ON product.model = pc.model
GROUP BY (maker)
22. SELECT speed, AVG(price)
FROM PC
WHERE speed > 600
GROUP BY (speed)
23. SELECT maker
FROM Product, PC
WHERE (Product.model = PC.model AND PC.speed>=750)
INTERSECT
SELECT maker
FROM Product, Laptop
WHERE (Product.model = Laptop.model AND Laptop.speed>=750)
24. WITH allpr AS 
(SELECT model, price 
 FROM pc 
 WHERE price = 
  (SELECT MAX(price) 
   FROM pc)
UNION
SELECT model, price 
FROM laptop 
WHERE price = 
(SELECT MAX(price) 
FROM laptop)
UNION
SELECT model, price 
FROM printer 
WHERE price = 
(SELECT MAX(price) 
FROM printer))
SELECT model
FROM allpr 
WHERE price = 
(SELECT MAX(price) 
FROM allpr )
25. SELECT DISTINCT Product.maker 
FROM product INNER JOIN PC
ON Product.model = pc.model 
WHERE PC.ram = (select min(ram) from PC) 
and PC.speed = (SELECT MAX(speed) 
FROM PC WHERE ram = (SELECT MIN(ram) FROM PC))
                    and Product.maker in 
                    (SELECT maker 
                     FROM product 
                     WHERE type = 'printer')
26. WITH allpr AS 
(SELECT PC.model, PC.price,  Product.maker
 FROM PC INNER JOIN Product 
 ON PC.model = Product.model 
 WHERE Product.maker = 'A'
UNION ALL
SELECT Laptop.model, Laptop.price, Product.maker
FROM Laptop INNER JOIN Product  
ON Laptop.model = Product.model 
WHERE Product.maker = 'A'
)
SELECT AVG(price)
FROM allpr
27. SELECT Product.maker, AVG(PC.hd)
FROM Product INNER JOIN PC
ON product.model = pc.model
WHERE Product.maker in 
(SELECT maker 
FROM product 
 WHERE type = 'printer')
GROUP BY (maker)
28. SELECT COUNT(maker) FROM Product 
WHERE maker IN
(
  SELECT maker FROM Product
  GROUP BY maker
  HAVING COUNT(model) = 1
)
29. select t.point, t.date, SUM(t.inc), sum(t.out) 
from(select point, date, inc, null as out from Income_o  
Union 
select point, date, null as inc, Outcome_o.out from Outcome_o) 
as t group by t.point, t.date
30. with i as (
select point, date, sum(inc) as inc
from Income
group by point, date
),
 o as (
select point, date, sum(out) as out
from Outcome
group by point, date
)
select i.point, i.date, o.out, i.inc
from i left join o on i.point = o.point and i.date = o.date
union
select o.point, o.date, o.out, i.inc
from i right join o on i.point = o.point and i.date = o.date
31. SELECT class, country
FROM Classes
WHERE bore >= 16
32. SELECT res.country, cast(avg(power(res.bore,3)/2) as numeric(6,2)) as weight
From (SELECT Classes.country, Classes.bore, Ships.name
	FROM Classes JOIN Ships 
        ON Classes.class=Ships.class
	Union
	SELECT Classes.country, Classes.bore, Outcomes.ship AS name
	FROM Classes JOIN Outcomes 
        ON Classes.class=Outcomes.ship) AS res
GROUP BY res.country
33. SELECT ship
FROM Outcomes
WHERE result = 'sunk' AND battle = 'North Atlantic'
34. SELECT Ships.name
FROM Classes INNER JOIN Ships
ON Classes.class = Ships.class
WHERE Classes.type = 'bb' AND Ships.launched >= 1922 AND Classes.displacement > 35000
35. SELECT model, type 
FROM Product 
WHERE UPPER(model) NOT LIKE '%[^A-Z]%' 
OR model NOT LIKE '%[^0-9]%'
36. SELECT name
FROM Ships
Where class = name
UNION
SELECT Outcomes.ship 
FROM Outcomes, Classes 
Where Outcomes.ship = Classes.class
37. SELECT Classes.class
FROM Classes JOIN
     (SELECT name, class FROM Ships
      UNION
      SELECT ship, ship FROM Outcomes) AS res
ON Classes.class = res.class
GROUP BY Classes.class
HAVING COUNT(res.name) = 1
38. SELECT DISTINCT country FROM Classes 
WHERE country IN
(
  SELECT country FROM Classes 
  WHERE type = 'bb'
  INTERSECT
  SELECT country FROM Classes 
  WHERE type = 'bc'
)
39. SELECT DISTINCT o2.ship
FROM Battles as b1 JOIN Outcomes o1 ON o1.battle = b1.name,
     Battles as b2 JOIN Outcomes o2 ON o2.battle = b2.name
WHERE b1.date < b2.date 
  AND o1.result = 'damaged'
  AND o1.ship = o2.ship
40. SELECT maker, MAX(TYPE)
FROM product
GROUP BY maker
HAVING COUNT (model)> 1 AND MAX(TYPE)=MIN(TYPE)
41. SELECT Product.maker,
CASE WHEN MAX(CASE WHEN x.price IS NULL THEN 1 ELSE 0 END) = 0 
THEN MAX(x.price) ELSE NULL END
FROM Product JOIN (SELECT model, price FROM PC
                   UNION
                   SELECT model, price FROM Laptop
                   UNION 
                   SELECT model, price FROM Printer) AS x
ON Product.model = x.model
GROUP BY Product.maker
42. SELECT ship, battle
FROM Outcomes
WHERE result = 'sunk'
43. SELECT name FROM Battles
WHERE DATEPART(year, date) NOT IN
(SELECT launched from Ships
 WHERE launched IS NOT NULL)
44. SELECT name
FROM Ships
WHERE UPPER(name) LIKE 'R%'
UNION
SELECT ship
FROM Outcomes 
WHERE UPPER(ship) LIKE 'R%'
45. SELECT name FROM Ships
WHERE name LIKE '% % %'
UNION
SELECT ship FROM Outcomes
WHERE ship LIKE '% % %'
46. SELECT Outcomes.ship, displacement, numGuns 
FROM (
	SELECT name AS ship, displacement, numGuns 
	FROM Ships JOIN Classes ON Classes.class=Ships.class 
	UNION 
	SELECT class AS ship, displacement, numGuns 
	FROM Classes
) AS a RIGHT JOIN Outcomes  ON Outcomes.ship=a.ship 
WHERE battle = 'Guadalcanal'
47. WITH t1 AS 
(SELECT COUNT(name) as co, country 
FROM
(SELECT name, country 
 FROM Classes INNER JOIN Ships 
 ON Ships.class = Classes.class
      UNION
 SELECT ship, country 
 FROM Classes INNER JOIN Outcomes 
 ON Outcomes.ship = Classes.class) x1
GROUP BY country
),
t2 AS ( 
SELECT COUNT(name) as co, country 
FROM 
 ( SELECT name, country 
   FROM Classes INNER JOIN Ships 
   ON Ships.class = Classes.class
   WHERE name IN 
     (SELECT DISTINCT ship 
      FROM Outcomes 
      WHERE result LIKE 'sunk')
   UNION
   SELECT ship, country 
   FROM Classes INNER JOIN Outcomes 
   ON Outcomes.ship = Classes.class
   WHERE ship IN 
     (SELECT DISTINCT ship 
      FROM Outcomes 
      WHERE result LIKE 'sunk')) x2
GROUP BY country )
SELECT t1.country 
FROM t1 INNER JOIN t2
ON t1.co = t2.co 
and t1.country = t2.country
48. Select Ships.class
From Ships INNER JOIN Outcomes 
ON Outcomes.ship = Ships.name 
WHERE Outcomes.result = 'sunk'
Union
Select Classes.class
From Classes INNER JOIN Outcomes 
ON Outcomes.ship = Classes.class 
WHERE Outcomes.result = 'sunk'
49. SELECT Ships.name
FROM Classes INNER JOIN Ships
ON Ships.class = Classes.class
WHERE bore = 16
UNION
SELECT Outcomes.ship
FROM Classes INNER JOIN Outcomes 
ON Outcomes.ship = Classes.class
WHERE bore = 16
50. SELECT DISTINCT battle 
FROM Outcomes
JOIN Ships ON Outcomes.ship=Ships.name
WHERE Ships.class='Kongo'
51. WITH sh AS (
  SELECT name, class FROM ships
  UNION
  SELECT ship, ship FROM outcomes
)
SELECT 
  name
  FROM sh JOIN Classes c on sh.class=c.class
  WHERE numguns >= ALL(
    SELECT ci.numguns FROM Classes ci
    WHERE ci.displacement=c.displacement
      AND ci.class IN (SELECT sh.class FROM sh)
    )
52. WITH sh AS (
  SELECT name, class FROM ships
  UNION
  SELECT ship, ship FROM outcomes
)
SELECT 
  name
  FROM sh JOIN Classes c on sh.class=c.class
  WHERE country = 'Japan' 
    AND type = 'bb' 
    AND (displacement <= 65000 
      OR displacement  IS NULL) 
    AND (bore < 19 
      OR bore IS NULL) 
    AND (numGuns >= 9 
      OR numGuns IS NULL)
53. SELECT cast(avg(numGuns*1.0) as numeric(6,2)) 
  FROM Classes 
  WHERE type = 'bb'
54. WITH sh AS (
  SELECT name, class FROM ships
  UNION
  SELECT ship, ship FROM outcomes
)
SELECT 
  cast(avg(numGuns*1.0) as numeric(6,2)) 
  FROM sh JOIN Classes c on sh.class=c.class
WHERE type = 'bb'
55. WITH sh AS (
  SELECT name, class, launched FROM ships
)
SELECT 
  c.class, MIN(launched)
  FROM sh FULL JOIN Classes c on sh.class=c.class
  GROUP BY c.class
56. select class, SUM(CASE WHEN result='sunk' THEN 1 ELSE 0 END)
  from ( 
    select classes.class, name from classes
      left join ships on classes.class=ships.class
    union
    select class, ship from classes
      join outcomes on class=ship
  ) as sh
  left join outcomes on sh.name=outcomes.ship
  group by class
57. select class, SUM(CASE WHEN result='sunk' THEN 1 ELSE 0 END)
  from ( 
    select classes.class, name from classes
      left join ships on classes.class=ships.class
    union
    select class, ship from classes
      join outcomes on class=ship
  ) as sh
  left join outcomes on sh.name=outcomes.ship
  group by class

  having
    SUM(CASE WHEN result='sunk' THEN 1 ELSE 0 END) > 0
    and (select count(si.name)
         from (
            select ships.name, ships.class from ships
            union
            select outcomes.ship, outcomes.ship from outcomes) as si

        where si.class = sh.class
        group by si.class) >= 3
58. select distinct
  maker, type, cast((
      count(model) over(partition by maker, type))*100.0/
      count(model) over(partition by maker)
     as NUMERIC(5,2))     
  from (
    select
      pt.maker, pt.type, p.model
      from (   
        select distinct a.maker, b.type
        from product a, product b
      ) pt     
      left join product p on pt.maker=p.maker and pt.type=p.type
  )as p
59. select A.point, 
       case when o is null then i 
            else i - o 
            end 
FROM  (select point, sum(inc) as i 
       from Income_o 
       group by point) as A 
left join (select point, sum(out) as o
           from Outcome_o 
           group by point) as B 
on A.point=B.point
60.select A.point, 
       case when o is null then i 
            else i - o 
            end 
FROM  (select point, sum(inc) as i 
       from Income_o 
       where date<'2001-04-15'
       group by point) as A 
left join (select point, sum(out) as o
           from Outcome_o
           where date<'2001-04-15'
           group by point) as B 
on A.point=B.point
61.SELECT SUM(res.rest) FROM
(select A.point, 
       case when o is null then i 
            else i - o 
            end 
       as rest
FROM  (select point, sum(inc) as i 
       from Income_o 
       group by point) as A 
left join (select point, sum(out) as o
           from Outcome_o
           group by point) as B 
on A.point=B.point) res
62.SELECT SUM(res.rest) FROM
(select A.point, 
       case when o is null then i 
            else i - o 
            end 
       as rest
FROM  (select point, sum(inc) as i 
       from Income_o 
       where date<'2001-04-15'
       group by point) as A 
left join (select point, sum(out) as o
           from Outcome_o
           where date<'2001-04-15'
           group by point) as B 
on A.point=B.point) res
63.select name from passenger
where id_psg in (
  select p.id_psg
  from pass_in_trip p
  group by p.id_psg, p.place
  having count(place) > 1)
64.Select income.point, income.date, 'inc', sum(income.inc) 
from income 
left join outcome
on income.point=outcome.point and income.date=outcome.date 
where outcome.date is null  
group by income.point, income.date 

union 

Select outcome.point, outcome.date, 'out', sum(outcome.out) 
from income 
right join outcome 
on income.point=outcome.point and income.date=outcome.date 
where income.date is null 
group by outcome.point, outcome.date
65.select row_number() over (order by maker) num, maker2 maker, type 
from
(select maker, maker2 =
                 case row_number() over (partition by maker 
                                         order by CASE
                                                  WHEN type = 'PC' THEN 1
                                                  WHEN type = 'Laptop' THEN 2
                                                  WHEN type = 'Printer' THEN 3
                                                  ELSE 4
                                                  END)

                                          when 1 then maker
                                          else ''
                                          end
              , type
from (select distinct maker, type
      from product) x) y
66.SELECT date, max(c) FROM
(SELECT date,count(*) AS c FROM Trip,
(SELECT trip_no,date FROM Pass_in_trip WHERE date>='2003-04-01' AND date<='2003-04-07' GROUP BY trip_no, date) AS t1
WHERE Trip.trip_no=t1.trip_no AND town_from='Rostov'
GROUP BY date
UNION ALL
SELECT '2003-04-01',0
UNION ALL
SELECT '2003-04-02',0
UNION ALL
SELECT '2003-04-03',0
UNION ALL
SELECT '2003-04-04',0
UNION ALL
SELECT '2003-04-05',0
UNION ALL
SELECT '2003-04-06',0
UNION ALL
SELECT '2003-04-07',0) AS t2
GROUP BY date
67.with q as (
  select count(*) as c
  from trip
  group by town_from, town_to
)
select count(*) 
from q
where c= (select max(c) 
          from q)
68.with q as (
  select
    count(*) as c
    from trip
  group by
    case when town_from > town_to
          then town_from else town_to
    end
    ,case when town_from < town_to
          then town_from else town_to
    end
)
select count(*) 
from q
where c=(select max(c) from q)
69.WITH op as 
(select point, date, Inc as sm 
 FROM Income
union all
SELECT point, date, -Out 
FROM Outcome)

select point, convert(char(25),date,103),
(SELECT SUM(sm) 
 FROM op
 WHERE op.date<=o1.date 
   and op.point=o1.point) 
FROM op as o1
GROUP BY point, date
70.SELECT DISTINCT o.battle
FROM outcomes o
LEFT JOIN ships s 
ON s.name = o.ship
LEFT JOIN classes c 
ON o.ship = c.class 
OR s.class = c.class
WHERE c.country IS NOT NULL
GROUP BY c.country, o.battle
HAVING COUNT(o.ship) >= 3
71.select p.maker from product p
where p.type='pc' 
group by p.maker 
having count(DISTINCT p.model) = (select count(DISTINCT pc.model) 
from pc 
where pc.model in (select DISTINCT pr.model 
                   from product pr 
                   where pr.maker=p.maker))
72.SELECT
 (SELECT name FROM Passenger 
  WHERE ID_psg = B.ID_psg) AS name, B.trip_Qty
FROM (SELECT P.ID_psg, MIN(T.ID_comp) AS ID_comp,
             COUNT(*) AS trip_Qty, MAX(COUNT(*)) OVER() AS Max_Qty
      FROM Pass_in_trip AS P 
      JOIN
      Trip AS T 
      ON P.trip_no = T.trip_no
      GROUP BY P.ID_psg
      HAVING MIN(T.ID_comp) = MAX(T.ID_comp)
      ) AS B
WHERE B.trip_Qty = B.Max_Qty
73.SELECT DISTINCT c.country, b.name
FROM battles b, classes c
EXCEPT
SELECT c.country, o.battle
FROM outcomes o
LEFT JOIN ships s 
ON s.name = o.ship
LEFT JOIN classes c 
ON o.ship = c.class 
OR s.class = c.class
WHERE c.country IS NOT NULL
GROUP BY c.country, o.battle
74.select c.country, c.class 
from classes c 
where c.country like (case when (select count(*) 
                                 from classes c
                                 where c.country='Russia'
                                 group by c.country) is not null 
                            THEN ('Russia') 
                            else ('%') end)
75.select maker, max(l.price) as laptop, max(pc.price) as pc, max(pr.price) as printer
from laptop l 
right join 
product p 
on l.model = p.model
left join pc
on pc.model = p.model 
left join 
printer pr 
on p.model = pr.model
where maker in (
  select maker 
  from product 
  where model in (
    select model 
    from pc 
    where price is not null 
    union all
    select model 
    from printer 
    where price is not null 
    union all
    select model 
    from laptop 
    where price is not null)) 
group by maker order by maker
76.WITH cte AS
(SELECT ROW_NUMBER() 
 OVER (PARTITION BY ps.ID_psg,pit.place 
       ORDER BY pit.date) AS rowNumber
,DATEDIFF (minute, time_out, DATEADD(DAY,IIF(time_in<time_out,1,0), time_in)) AS timeFlight, ps.Id_psg, ps.name

FROM Pass_in_trip pit 
LEFT JOIN 
trip tr 
ON pit.trip_no = tr.trip_no
LEFT JOIN 
Passenger ps 
ON ps.ID_psg = pit.ID_psg 
)
SELECT MAX(cte.name), SUM(timeFlight) 
FROM cte
GROUP BY cte.ID_psg
HAVING MAX(rowNumber) = 1
77.with q as (
select
  count(distinct t.trip_no) as trip_count
  , pt.date
from trip t, pass_in_trip pt
where t.trip_no=pt.trip_no
      and town_from='Rostov'
group by date
)
select
  trip_count, date
  from q
  where trip_count=(select max(trip_count) from q)
78.select name
  , DATEADD(day, 1, EOMONTH(DATEADD(month, -1, date))) first_day
  , EOMONTH(date) last_day
from battles
79.SELECT Passenger.name, A.minutes
FROM (SELECT P.ID_psg,
      SUM((DATEDIFF(minute, time_out, time_in) + 1440)%1440) AS minutes,
      MAX(SUM((DATEDIFF(minute, time_out, time_in) + 1440)%1440)) OVER() AS MaxMinutes
      FROM Pass_in_trip P 
      JOIN
      Trip AS T 
      ON P.trip_no = T.trip_no
      GROUP BY P.ID_psg
      ) AS A 
JOIN
Passenger 
ON Passenger.ID_psg = A.ID_psg
WHERE A.minutes = A.MaxMinutes
80.select maker from product
except
select maker from product
where type='pc' and model not in (select model from pc)
81.with q as(
  select *, sum(out) over(
        partition by year(date), month(date)) as month_out
  from Outcome 
)
select code, point, date, out 
from q
where month_out = (select max(month_out) 
                   from q)
82.WITH CTE
AS
(SELECT PC.code, PC.price, number = ROW_NUMBER() OVER (ORDER BY PC.code)
FROM PC)
SELECT CTE.code, AVG(C.price)
FROM CTE
JOIN CTE C 
ON (C.number-CTE.number) < 6 
AND (C.number-CTE.number) >= 0
GROUP BY CTE.number, CTE.code
HAVING COUNT(CTE.number)=6
83.with q as (
  select
    name
    , case numGuns when 8 then 1 else 0 end as a
    , case bore when 15 then 1 else 0 end as c
    , case displacement when 32000 then 1 else 0 end as b
    , case type when 'bb' then 1 else 0 end as d
    , case launched when 1915 then 1 else 0 end as e
    , case c.class when 'Kongo' then 1 else 0 end as f
    , case country when 'USA' then 1 else 0 end as g
  from ships s, classes c where s.class=c.class
)
select name from q where (a+b+c+d+e+f+g)>=4
84.SELECT C.name, A.N_1_10, A.N_11_21, A.N_21_30
FROM (SELECT T.ID_comp,
       SUM(CASE WHEN DAY(P.date) < 11 THEN 1 ELSE 0 END) AS N_1_10,
       SUM(CASE WHEN (DAY(P.date) > 10 AND DAY(P.date) < 21) THEN 1 ELSE 0 END) AS N_11_21,
       SUM(CASE WHEN DAY(P.date) > 20 THEN 1 ELSE 0 END) AS N_21_30
      FROM Trip AS T JOIN
       Pass_in_trip AS P ON T.trip_no = P.trip_no AND CONVERT(char(6), P.date, 112) = '200304'
      GROUP BY T.ID_comp
      ) AS A JOIN
 Company AS C ON A.ID_comp = C.ID_comp
85.select maker from product where type='printer'
except
select maker from product where type!='printer'
union (
  select maker from product where type='pc'
  group by maker
  having count(model) >= 3
  except
  select maker from product where type!='pc'
)
86.SELECT maker, 
CASE count(distinct type) 
WHEN 1 THEN MIN(type) 
WHEN 2 THEN MIN(type) + '/' + MAX(type) 
WHEN 3 THEN 'Laptop/PC/Printer' END 
FROM Product 
GROUP BY maker
87.SELECT DISTINCT name, COUNT(town_to) Qty
FROM Trip tr JOIN Pass_in_trip pit ON tr.trip_no = pit.trip_no JOIN
         Passenger psg ON pit.ID_psg = psg.ID_psg
WHERE town_to = 'Moscow' AND pit.ID_psg NOT IN(SELECT DISTINCT ID_psg
FROM Trip tr JOIN Pass_in_trip pit ON tr.trip_no = pit.trip_no
WHERE date+time_out = (SELECT MIN (date+time_out)
                       FROM Trip tr1 JOIN Pass_in_trip pit1 ON tr1.trip_no = pit1.trip_no
                       WHERE pit.ID_psg = pit1.ID_psg)
AND town_from = 'Moscow')
GROUP BY pit.ID_psg, name
HAVING COUNT(town_to) > 1
88.SELECT (
	SELECT name FROM Passenger 
	WHERE ID_psg = R.ID_psg
) AS name, R.trip_Qty, (
	SELECT name FROM Company 
	WHERE ID_comp = R.ID_comp
) AS Company 
FROM (
	SELECT Pass_in_trip.ID_psg, MIN(Trip.ID_comp) AS ID_comp, 
	COUNT(*) AS trip_Qty, MAX(COUNT(*)) OVER() AS Max_Qty 
	FROM Pass_in_trip 
	INNER JOIN Trip ON Pass_in_trip.trip_no = Trip.trip_no 
	GROUP BY Pass_in_trip.ID_psg 
	HAVING MIN(Trip.ID_comp) = MAX(Trip.ID_comp) 
) AS R 
WHERE R.trip_Qty = R.Max_Qty
89.With sr as (select count(model) qty from Product Group by maker)

Select maker, count(model) qty from Product
Group by maker
Having count(model) = (select MAX(qty) from sr)
	or
count(model) = (select MIN(qty) from sr)
90.SELECT maker, model, type FROM
(
	SELECT maker, model, type,
	row_number() over(ORDER BY model) first,
	row_number() over(ORDER BY model DESC) second
	FROM Product
) R
WHERE first > 3 AND second > 3
91.SELECT CAST(sum(T.s)/count (T.s) AS NUMERIC(12,2)) 
FROM
(SELECT distinct q.Q_NAME, SUM (cast(ISNULL(B_VOL,0) as FLOAT)) as s 
FROM utQ q
LEFT JOIN utB B
on q.Q_ID=B.B_Q_ID
group by q.Q_NAME) T
92.SELECT Q_NAME
FROM utQ
WHERE Q_ID IN (SELECT DISTINCT B.B_Q_ID
                FROM (SELECT B_Q_ID
                        FROM utB
                        GROUP BY B_Q_ID
                        HAVING SUM(B_VOL) = 3 * 255) AS B
                WHERE B.B_Q_ID NOT IN (SELECT B_Q_ID
                                        FROM utB
                                        WHERE B_V_ID IN (SELECT B_V_ID
                                                          FROM utB
                                                          GROUP BY B_V_ID
                                                          HAVING SUM(B_VOL) < 255)))
93.select c.name, sum(vr.vr)
from
(select distinct t.id_comp, pt.trip_no, pt.date,t.time_out,t.time_in,--pt.id_psg,
case
     when DATEDIFF(mi, t.time_out,t.time_in)> 0 then DATEDIFF(mi, t.time_out,t.time_in)
     when DATEDIFF(mi, t.time_out,t.time_in)<=0 then DATEDIFF(mi, t.time_out,t.time_in+1)
end vr
from pass_in_trip pt left join trip t on pt.trip_no=t.trip_no
) vr left join company c on vr.id_comp=c.id_comp
group by c.name
94.SELECT DATEADD(day, S.Num, D.date) AS Dt,
       (SELECT COUNT(DISTINCT P.trip_no)
        FROM Pass_in_trip P
               JOIN Trip T
                 ON P.trip_no = T.trip_no
                    AND T.town_from = 'Rostov'
                    AND P.date = DATEADD(day, S.Num, D.date)) AS Qty
FROM (SELECT (3 * ( x - 1 ) + y - 1) AS Num
        FROM (SELECT 1 AS x UNION ALL SELECT 2 UNION ALL SELECT 3) AS N1
               CROSS JOIN (SELECT 1 AS y UNION ALL SELECT 2 UNION ALL SELECT 3) AS N2
        WHERE (3 * ( x - 1 ) + y ) < 8) AS S,
       (SELECT MIN(A.date) AS date
        FROM (SELECT P.date,
                       COUNT(DISTINCT P.trip_no) AS Qty,
                       MAX(COUNT(DISTINCT P.trip_no)) OVER() AS M_Qty
                FROM Pass_in_trip AS P
                       JOIN Trip AS T
                         ON P.trip_no = T.trip_no
                            AND T.town_from = 'Rostov'
                GROUP BY P.date) AS A
        WHERE A.Qty = A.M_Qty) AS D
95.Select 
	Company.name, 
	COUNT(DISTINCT CONVERT(CHAR(24),pt.date)+CONVERT(CHAR(4),t.trip_no)) flights, 
	count(distinct t.plane) planes,
	count(distinct pt.ID_psg) diff_psngrs,
	count(pt.ID_psg) total_psngrs
From
	Company
	Join Trip t On Company.ID_comp=t.ID_comp
	Join Pass_in_Trip pt On pt.trip_no=t.trip_no
Group by Company.name
96.with r as (select v.v_name,
       v.v_id,
       count(case when v_color = 'R' then 1 end) over(partition by v_id) cnt_r,
       count(case when v_color = 'B' then 1 end) over(partition by b_q_id) cnt_b
  from utV v join utB b on v.v_id = b.b_v_id)
select v_name
  from r
where cnt_r > 1
  and cnt_b > 0
group by v_name
97.select code, speed, ram, price, screen
from laptop where exists (
  select 1 x
  from (
    select v, rank()over(order by v) rn
    from ( select cast(speed as float) sp, cast(ram as float) rm,
                  cast(price as float) pr, cast(screen as float) sc
    )l unpivot(v for c in (sp, rm, pr, sc))u
  )l pivot(max(v) for rn in ([1],[2],[3],[4]))p
  where [1]*2 <= [2] and [2]*2 <= [3] and [3]*2 <= [4]
)
98.with CTE AS
(select 1 n, cast (0 as varchar(16)) bit_or, code, speed, ram 
FROM PC
UNION ALL
select n*2,
cast (convert(bit,(speed|ram)&n) as varchar(1))+cast(bit_or as varchar(15))
, code, speed, ram
from CTE where n < 65536
)
select code, speed, ram from CTE
where n = 65536
and CHARINDEX('1111', bit_or )> 0
99.with xuy as (select point, date, case when out is null then date else dateadd(dd, case when datename(dw,dateadd(dd, 1, date))='sunday' then 2 else 1 end, date) end date2 from (Select a.*, b.out from income_o a left join outcome_o b on a.point=b.point and a.date=b.date)aa)

select xuy.point, xuy.date, xuy.date2 from xuy
except
select xuy.point, xuy.date, xuy.date2 from xuy,outcome_o where outcome_o.point=xuy.point and xuy.date2=outcome_o.date
union
select xuy.point,xuy.date, (select dateadd(dd,case when datename(dw,min(date))='saturday' then 2 else 1 end,min(date)) from (select point, date from outcome_o where concat(point, ' ',dateadd(dd,case when datename(dw,date)='saturday' then 2 else 1 end,date)) not in (select concat (point,' ',date) from outcome_o))nn where date>=xuy.date2 and point=xuy.point) from xuy,outcome_o where outcome_o.point=xuy.point and xuy.date2=outcome_o.date
100.Select distinct A.date , A.R, B.point, B.inc, C.point, C.out
From (Select distinct date, ROW_Number() OVER(PARTITION BY date ORDER BY code asc) as R From Income
Union Select distinct date, ROW_Number() OVER(PARTITION BY date ORDER BY code asc) From Outcome) A
LEFT Join (Select date, point, inc
                , ROW_Number() OVER(PARTITION BY date ORDER BY code asc) as RI FROM Income
           ) B on B.date=A.date and B.RI=A.R
LEFT Join (Select date, point, out
                , ROW_Number() OVER(PARTITION BY date ORDER BY code asc) as RO FROM Outcome
           ) C on C.date=A.date and C.RO=A.R
101.SELECT code, model, color, type, price,
  MAX(model)OVER(PARTITION BY Grp)max_model,
  MAX(CASE type WHEN'Laser'THEN 1 ELSE 0 END)OVER(PARTITION BY Grp)+
  MAX(CASE type WHEN'Matrix'THEN 1 ELSE 0 END)OVER(PARTITION BY Grp)+
  MAX(CASE type WHEN'Jet'THEN 1 ELSE 0 END)OVER(PARTITION BY Grp)distinct_types,
  AVG(price)OVER(PARTITION BY Grp)
FROM(
  SELECT *,
    CASE color WHEN'n'THEN 0 ELSE ROW_NUMBER()OVER(ORDER BY code)END+
    CASE color WHEN'n'THEN 1 ELSE-1 END*ROW_NUMBER()OVER(PARTITION BY color ORDER BY code)Grp
  FROM Printer
)T
102.select name from passenger
where id_psg in
(
select id_psg from trip t,pass_in_trip pit
where t.trip_no=pit.trip_no
group by id_psg
having count(distinct case when town_from<=town_to then town_from+town_to else town_to+town_from end)=1
)
103.select
	min(t1.trip_no) min1, min(t2.trip_no) min2, min(t3.trip_no) min3,
	max(t1.trip_no) max, max(t2.trip_no) max2, max(t3.trip_no) max3
From
	Trip t1,
	Trip t2,
	Trip t3
Where t1.trip_no < t2.trip_no and t2.trip_no < t3.trip_no
104.with cte as (
select class, cast(numGuns as int) ng, 'bc-' + cast(numGuns as  varchar(4)) num
from dbo.Classes where type = 'bc' and numGuns > 0
union all
select class, ng - 1, 'bc-' + cast(ng - 1 as  varchar(4))
from cte where ng > 1)
select class, num from cte order by class, num
105.Select
	maker, 
	model,
	row_number() over(order by maker, model) as Alice,
	dense_rank() over(order by maker) as Bella,
	rank() over(order by maker) as Vika,
	count(*) over(order by maker) as Galina
From
	Product
106.with a as(
select *,row_number()over(order by b_datetime,b_q_id,b_v_id) n from utb)
select b_datetime,b_q_id,b_v_id,b_vol,
cast(exp(sm1)/exp(sm2) as numeric(12,8))k
from a x
cross apply
(select sum (iif(n%2<> 0,log(b_vol),0)) sm1,sum( iif(n%2=0,log(b_vol),0)) sm2 from a where n<=x.n)y
107.Select name, trip_no, date
from(
select row_number() over(order by date+time_out,ID_psg) rn,name,Trip.trip_no,date
from Company,Pass_in_trip,Trip
where Company.ID_comp=Trip.ID_comp and Trip.trip_no=Pass_in_trip.trip_no
  and town_from='Rostov' and year(date)=2003 and month(date)=4)_
where rn=5
108.SELECT DISTINCT b1.B_VOL, b2.b_vol, b3.b_vol 
FROM utb b1, utb b2, utb b3
WHERE b1.B_VOL < b2.B_VOL AND b2.B_VOL < b3.B_VOL
AND NOT ( b3.B_VOL > SQRT( SQUARE(b1.B_VOL) + SQUARE(b2.B_VOL)))
109.SELECT A.Q_NAME AS q_name,
       A.Whites AS Whites,
       A.Cnt - A.Whites AS Blacks
FROM (SELECT Q.Q_ID,
               Q.Q_NAME,
               (SUM(SUM(B.B_VOL)) OVER())/765 AS Whites,
               COUNT(*) OVER() AS Cnt
        FROM utQ AS Q
               LEFT JOIN utB AS B
                      ON Q.Q_ID = B.B_Q_ID
        GROUP BY Q.Q_ID,
                  Q.Q_NAME
        HAVING SUM(B.B_VOL) = 765
                OR SUM(B.B_VOL) IS NULL) AS A
110.select name from passenger where id_psg in
 (select id_psg
  from pass_in_trip pit join trip t on pit.trip_no = t.trip_no
  where time_in < time_out and datepart(dw, date) = 7
 )
111.WITH t1 AS (SELECT q.*, 
COALESCE((SELECT SUM(b_vol) FROM utb b WHERE b.b_q_id = q.q_id AND b.b_v_id IN (SELECT v.v_id FROM utv v WHERE v.v_color = 'r')), 0) r,
COALESCE((SELECT SUM(b_vol) FROM utb b WHERE b.b_q_id = q.q_id AND b.b_v_id IN (SELECT v.v_id FROM utv v WHERE v.v_color = 'g')), 0) g,
COALESCE((SELECT SUM(b_vol) FROM utb b WHERE b.b_q_id = q.q_id AND b.b_v_id IN (SELECT v.v_id FROM utv v WHERE v.v_color = 'b')), 0) b
FROM utq q
)

SELECT q_name, r qty FROM t1
WHERE t1.r = t1.g AND
t1.r = t1.b
AND t1.r != 0 AND t1.r != 255
112.with cte as (
select ((count(distinct [V_ID]) * 255 - sum([B_VOL]))/ 255) as fv
from utv left join [dbo].[utB] on [utB].[B_V_ID] = [utV].[V_ID]
group by [V_COLOR])
select iif(count(*)=3,min(fv),0) as qty from cte
113.with cte1 as (
select 
     iif(v_color = 'R',
           (select count (*) from utQ) * 255- sum(coalesce([B_VOL],0)),
           0) as r,
     iif(v_color = 'G',
           (select count (*) from utQ) * 255- sum(coalesce([B_VOL],0)),
           0) as g,
     iif(v_color = 'B',
           (select count (*) from utQ) * 255- sum(coalesce([B_VOL],0)),
           0) as b
from utv, utB
where  utb.b_v_ID = utv.v_ID
group by v_color
)
select sum(r), sum(g), sum(b) from cte1
114.WITH b AS
(SELECT ID_psg, COUNT(*) as cnt FROM Pass_In_Trip GROUP BY ID_psg, place),
b1 AS
(SELECT DISTINCT ID_psg, cnt FROM b WHERE cnt =(SELECT MAX(cnt) FROM b))
SELECT name, cnt FROM b1 JOIN Passenger p ON (b1.ID_psg = p.ID_psg)
115.SELECT
    DISTINCT
    b1.b_vol,
    b2.b_vol,
    b3.b_vol,
    CAST(SQRT(1.0 * b1.b_vol * b2.b_vol) / 2 AS NUMERIC(8, 2))
FROM 
    utB b1,
    utB b2,
    utB b3
WHERE 
    b1.b_vol < b2.b_vol and
    b3.b_vol = (1.0 * b1.b_vol + 1.0 * b2.b_vol) / 2
116.WITH cte AS (SELECT B_DATETIME, 
	DATEADD(ss, -1 * DENSE_RANK() OVER(ORDER BY B_DATETIME), B_DATETIME) AS grp
	FROM utB
)

SELECT MIN(B_DATETIME), MAX(B_DATETIME)
FROM cte
GROUP BY grp
HAVING COUNT(DISTINCT B_DATETIME) >  1
117.Select top 1 with ties country, x, n
 from classes
cross apply(values(numguns*5000,'numguns')
                  ,(bore*3000,'bore')
                  ,(displacement,'displacement'))V(x,n)
group by country, x, n
order by rank()over(partition by country order by x desc)
118.select 
	name,
	CAST(date AS DATE) date, 
	case 
		when date>=dmin 
		then dmax 
		else dmin 
	end
from 
(	
	select  name, date,
		DATEFROMPARTS(y1,4, (y1/2+y1/100-y1/400-5)%7+2) dmin,
                DATEFROMPARTS (y2,4,(y2/2+y2/100-y2/400-5)%7+2) dmax
	from
	(
		select name, date,
			y1+4*(sign(y1%400)*(sign(y1%100)-1)) y1,
                        y2-4*(sign(y2%400)*(sign(y2%100)-1)) y2
		from (
			select name, date, 
			year(date)/4*4 y1, year(date)/4*4 +4 y2
			from Battles
		)t
 	)t
)t
119.select coalesce(y,m,d) period, sum(b_vol) b_vol
from (
select B_DATETIME,sum(b_vol) b_vol
,convert(char(4),B_DATETIME,120) y
,convert(char(7),B_DATETIME,120) m
,convert(char(10),B_DATETIME,120) d
from utB group by B_DATETIME
) a
group by grouping sets((y),(m),(d))
having count(B_DATETIME)> 10
120.With t as
(Select ID_comp, convert(numeric(18,2), Case when time_in > = time_out
    Then datediff(minute, time_out, time_in)
    Else datediff(minute, time_out, dateadd(day, 1, time_in))
   End) as trmin
From (Select trip_no
 From Pass_in_trip
 Group by trip_no, [date]) pt join Trip t on pt.trip_no = t.trip_no
)

Select Coalesce(c.name, 'TOTAL'), A_mean, G_mean, Q_mean, H_mean
From (
 Select Id_comp ,
  convert(numeric(18,2), avg(trmin)) A_mean,
  convert(numeric(18,2), Exp(avg(Log(trmin)))) G_mean,
  convert(numeric(18,2), sqrt(avg(trmin*trmin))) Q_mean,
  convert(numeric(18,2), count(*)/sum(1/trmin)) H_mean
 From t
 Group by ID_comp
 with cube) as a left join Company c on a.ID_comp = c.ID_comp
121.select  [name]
from    [dbo].[Ships]
where   [launched] < 1941
union 
select  [ship]
from    [dbo].[Outcomes]
        join [dbo].[Battles] on [name] = [battle]
where   [date] < '19410101'
union 
select  [ship]
from    [dbo].[Outcomes]
where   [ship] in (select [class]
                 from   [dbo].[Ships]
                 where  [launched] < 1941)
union 
select  [ship]
from    [dbo].[Outcomes]
where   [ship] in (select [class]
                 from   [dbo].[Ships]
                        join [dbo].[Outcomes] on [Ships].[name] = [Outcomes].[ship]
                        join [dbo].[Battles] on [Battles].[name] = [Outcomes].[battle]
                 where  [date] < '19410101')
union
select  [name]
from    [dbo].[Ships]
where   [name] in (select [class]
                   from   [dbo].[Ships]
                   where  [launched] < 1941)
union
select  [name]
from    [dbo].[Ships]
where   [name] in (select [class]
                 from   [dbo].[Ships]
                        join [dbo].[Outcomes] on [Ships].[name] = [ship]
                        join [dbo].[Battles] on [Battles].[name] = [battle]
                 where  [date] < '19410101')
122.with cta as (
select [ID_psg], [town_from], [town_to], [date] + [time_out] as date_out,
min([date] + [time_out]) over (partition by [dbo].[Pass_in_trip].[ID_psg]) mnd,
max([date] + [time_out]) over (partition by [dbo].[Pass_in_trip].[ID_psg]) mxd
from [dbo].[Pass_in_trip] join [dbo].[Trip] on [Trip].[trip_no] = [Pass_in_trip].[trip_no])
select [dbo].[Passenger].[name], [jta].[b_town]
from (
select [cta].[ID_psg], [cta].[town_from] as b_town
from cta where [cta].[date_out] = [cta].[mnd]) jta join (
select [cta].[ID_psg], [cta].[town_to] as c_town
from cta where [cta].[date_out] = [cta].[mxd]) jtb on [jtb].[ID_psg] = [jta].[ID_psg] 
join [dbo].[Passenger] on [Passenger].[ID_psg] = [jta].[ID_psg]
where [jta].[b_town] <> [jtb].[c_town]
123.with cta as (
select [maker], coalesce([dbo].[PC].[price], coalesce([dbo].[Laptop].[price], [dbo].[Printer].[price])) price, count(*) pc
from [dbo].[Product] left join [dbo].[PC] on [PC].[model] = [Product].[model]
left join [dbo].[Laptop] on [Laptop].[model] = [Product].[model]
left join [dbo].[Printer] on [Printer].[model] = [Product].[model]
where [PC].[price] is not null or [Laptop].[ram] is not null or [Printer].[price] is not null
group by [maker], coalesce([dbo].[PC].[price], coalesce([dbo].[Laptop].[price], [dbo].[Printer].[price]))
having count(*) > 1),
ctm as (select distinct maker from [dbo].[Product])
select [ctm].[maker], sum(coalesce(pc,0)) as mc, count(price) as pc
from ctm left join cta on [cta].[maker] = [ctm].[maker]
group by [ctm].[maker]
124.with	[cte]
				as (select	[ID_psg], [ID_comp], max(count(*)) over (partition by [ID_psg]) as [mxctc],
										min(count(*)) over (partition by [ID_psg]) as [mnctc], count(*) over (partition by [ID_psg]) as [cc]
						from		[dbo].[Pass_in_trip]
										join [dbo].[Trip] on [Trip].[trip_no] = [Pass_in_trip].[trip_no]
						group by [ID_psg], [ID_comp])
	select	[name]
	from		[dbo].[Passenger]
					join [cte] on [cte].[ID_psg] = [Passenger].[ID_psg]
	where		[cte].[mxctc] = [cte].[mnctc] and [cte].[cc] >= 2
	group by [Passenger].[ID_psg], [name]

125.with cta as (
select case when ca > ceiling((cc*1.0)/2) then cd * 2 else cc - cd + ca end as crn , 1 as tt,*
from (select row_number() over(order by code) ca,	row_number() over(order by code desc) cd,	count(*) over() cc,
	'Laptop' as type, [model], [price] from [dbo].[Laptop]) tr
union
select case when ca > ceiling((cc*1.0)/2) then cd * 2 else cc - cd + ca end as crn , 2 as tt,*
from (select row_number() over(order by code) ca,	row_number() over(order by code desc) cd,	count(*) over() cc,
	'PC' as type, [model], [price] from [dbo].PC) tr
union
select case when ca > ceiling((cc*1.0)/2) then cd * 2 else cc - cd + ca end as crn , 3 as tt,*
from (select row_number() over(order by code) ca,	row_number() over(order by code desc) cd,	count(*) over() cc,
	'Printer' as type, [model], [price] from [dbo].[Printer]) tr)
select row_number() over(order by [cta].[crn], [cta].[tt]) id, [cta].[type], [cta].[model], [cta].[price]
from cta
order by crn, [cta].[tt]

select * from (
	select case when ca > ceiling((cc*1.0)/2) then cd * 2 else cc - cd + ca end as crn , 2 as tt,*
from (select row_number() over(order by code) ca,	row_number() over(order by code desc) cd,	count(*) over() cc,
	'PC' as type, [model], [price] from [dbo].PC) tr) tr1 order by [tr1].[crn]
126.with cte as (select [ID_psg], count(*) as ct, max(count(*)) over() as mct
from [dbo].[Pass_in_trip]
group by [ID_psg]),
ctf as (select cte.*, [dbo].[Passenger].[name] from cte join [dbo].[Passenger] on [Passenger].[ID_psg] = [cte].[ID_psg] where ct = mct),
ctg as (select row_number() over(order by [ID_psg]) as rn, count(*) over() as cr,  [ID_psg], [name] from [dbo].[Passenger])
select ctf.[name] as [psg],
	case when ctg.[rn] = 1 
		then (select name from ctg ga where ga.[rn] = ctg.[cr]) 
		else (select name from ctg ga where ga.[rn] = ctg.[rn] - 1)
	end as [prev],
	case when ctg.[rn] = ctg.[cr]
		then (select name from ctg ga where ga.[rn] = 1)
		else (select name from ctg ga where ga.[rn] = ctg.[rn] + 1)
	end as [next]
from ctf join ctg on [ctg].[ID_psg] = [ctf].[ID_psg]
127.with cte as (select
(select top 1 price
from [dbo].[Laptop] join [dbo].[Product] on [Product].[model] = [Laptop].[model]
where [maker] in (
select maker
from pc join [dbo].[Product] on [Product].[model] = [PC].[model]
where cd = (select min(cd) from pc)) order by price) [1],
(select top 1 price
from [dbo].[PC] join [dbo].[Product] on [Product].[model] = [PC].[model]
where [maker] in (
select maker
from [dbo].[Printer] join [dbo].[Product] on [Product].[model] = [Printer].[model]
where [price] = (select min([price]) from [dbo].[Printer])) order by price desc) [2],
(select top 1 price
from [dbo].[Printer] join [dbo].[Product] on [Product].[model] = [Printer].[model]
where [maker] in (
select maker
from [dbo].[Laptop] join [dbo].[Product] on [Product].[model] = [Laptop].[model]
where [ram] = (select max([ram]) from [dbo].[Laptop])) order by price desc) [3])
select cast(val / iif([ca].[div] = 0, 1, [ca].[div]) as decimal(14, 2))
from cte
cross apply (
select (coalesce([cte].[1], 0) * 1.0 + coalesce([cte].[2], 0) * 1.0 + coalesce([cte].[3], 0) * 1.0) as val,
iif([cte].[1] is null, 0, 1) + iif([cte].[2] is null, 0, 1) + iif([cte].[3] is null, 0, 1) as [div]
from cte) ca
128.with
cta as (
select [point], [date], sum(out) s
from outcome
where [point] in (select point from [dbo].[Outcome_o])
group by [point], [date]),

ctb as (
select [point], [date], sum(out) s
from outcome_o
where [point] in (select point from [dbo].[Outcome])
group by [point], [date]),

ctc as (select
	coalesce([cta].[point], ctb.[point]) as point,
	coalesce([cta].[date], [ctb].[date]) as [date],
	coalesce([cta].[s], 0) as [sa],
	coalesce([ctb].[s], 0) as [sb]
from cta full join ctb on [ctb].[date] = [cta].[date] and [ctb].[point] = [cta].[point])
select 
	[ctc].[point],
	[ctc].[date],
	case
		when sa > sb then 'more than once a day'
		when sa < sb then 'once a day'
		else 'both'
	end lider
from ctc
order by [ctc].[point],[ctc].[date]
129.select (
select top 1 [mo].[Q_ID] + 1 id
from [dbo].[utQ] mo
where not exists (select  null from [dbo].[utQ] mi where mi.[Q_ID] = mo.[Q_ID] + 1)
and [mo].[Q_ID] < (select max([Q_ID]) from [dbo].[utQ])
order by [mo].[Q_ID]) minq,
(
select top 1 [mo].[Q_ID] - 1 id
from [dbo].[utQ] mo
where not exists (select  null from [dbo].[utQ] mi where mi.[Q_ID] = mo.[Q_ID] - 1)
and [mo].[Q_ID] > (select min([Q_ID]) from [dbo].[utQ])
order by [mo].[Q_ID] desc
) maxq
130.with cte as (select row_number() over(order by [date], name) rn, count(*) over() cnt, [date], [name]
from [dbo].[Battles])
select a.[rn], a.[name],a.[date],  b.[rn], b.[name], b.[date]
from cte a left join cte b on a.[rn] = b.rn - ([b].cnt / 2 + b.cnt % 2)
where a.[rn] <= a.cnt / 2 + a.cnt % 2
131.with ctea as (
select distinct town_from [town] from [dbo].[Trip] union select town_to from [dbo].[Trip]),
cteb as (select 'a' s union all select 'e' union all select 'i' union all select 'o' union all select 'u'),
ctec as (
select [town], DATALENGTH([ctea].[town]) - DATALENGTH(replace([ctea].[town], s, '')) as cs
from ctea, cteb),
ctee as (select [town], [cs], count(*) over(partition by [ctec].[town]) cc,
max(cs)  over(partition by [ctec].[town]) mxc, min(cs) over(partition by [ctec].[town]) mnc
from ctec where cs > 0)
select distinct town from ctee where cc > 1 and mxc = mnc
132.with cte as (select [date] as date1, date2,
	datediff(month, [date], date2) - 
	iif(datepart(day, date2) < datepart(day, [date]) and 
			datepart(day, [date]) <= datepart(day,eomonth(date2)), 1, 0)   as months
from battles cross apply 
(select coalesce(min(date), getdate()) date2 from battles b where b.date > battles.date) x)
select
	case
		when months/12 > 0 then cast(months/12 as varchar(4)) + 
			case when months - months/12 *12 > 0 then ' y., ' else ' y.' end
		else '' end +
	case when months - months/12 *12 > 0 then cast(months - months/12 * 12 as varchar(2)) + ' m.' else '' end  as age,
	convert(varchar(10), [date1], 127) as date1,
	convert(varchar(10), [date2], 127) as date2
from cte
133.select [cmp].[ID_comp] [top_id],
coalesce((select '' + cast([ID_comp] as varchar(max)) 
	from [dbo].[Company] a where a.[ID_comp] < [cmp].[ID_comp]
	order by [a].[ID_comp] for xml path('')), '') + 
	cast([cmp].[ID_comp] as varchar(max)) + 
	coalesce((select '' + cast([ID_comp] as varchar(max)) 
	from [dbo].[Company] a 
	where a.[ID_comp] < [cmp].[ID_comp]
	order by [a].[ID_comp] desc
	for xml path('')), '') [hill]
from [dbo].[Company] cmp
134.WITH
dsNeed AS
    (SELECT
         q.Q_ID,
         q.col color,
         255-SUM(COALESCE(b.B_VOL,0)) need,
         SUM(255-SUM(COALESCE(b.B_VOL,0))) 
               OVER (PARTITION BY q.col ORDER BY 
                         255-SUM(COALESCE(b.B_VOL,0)), q.Q_ID
                    ) sum
     FROM
         (SELECT Q_ID, Col 
          FROM (SELECT
                    Q_ID
                FROM 
                    utQ
                ) t1
                CROSS JOIN 
               (SELECT 'R' Col
                UNION ALL 
                SELECT 'G' UNION ALL
                SELECT 'B'
               ) t2
          )  q
         LEFT JOIN 
          (SELECT
               v.V_COLOR,
               b.B_Q_ID,
               SUM(b.B_VOL) B_VOL
           FROM
              utB b,utV v
              WHERE v.V_ID = b.B_V_ID  
            GROUP BY 
              v.V_COLOR,
              b.B_Q_ID 
           ) b
         ON q.Q_ID = b.B_Q_ID AND b.V_COLOR = q.Col
     GROUP BY
         q.Q_ID,
         q.col
    ),

dsHas AS
    (SELECT
         v.V_COLOR color,
         COUNT(DISTINCT v.V_ID)*255 - SUM(COALESCE(b.B_VOL,0)) has
     FROM
         utV v
         LEFT JOIN utB b
         ON v.V_ID = b.B_V_ID         
     GROUP BY
         v.V_COLOR
     )
SELECT
    DISTINCT dsNeed.Q_ID
FROM 
    dsNeed,
    dsHas
WHERE
    dsNeed.color = dsHas.color and
    dsNeed.sum > dsHas.has
135.!!!!!!!!!!!!!
136.SELECT
name,
PATINDEX('%[^A-Za-z]%', name) as npos,
SUBSTRING(name, PATINDEX('%[^A-Za-z]%',
name), 1) as litter
FROM Ships
WHERE PATINDEX('%[^A-Za-z]%', name) > 0
137.SELECT mo.type,

CASE
WHEN mo.type = 'pc' THEN AVG(p.price)
WHEN mo.type = 'laptop' THEN AVG(lap.price)
WHEN mo.type = 'printer' THEN AVG(prin.price)
END avg_price

FROM
(SELECT prod.model, prod.type, prod.num
FROM
(SELECT row_number() over(ORDER BY model ASC) num, model, type
FROM Product) prod
GROUP BY prod.model, prod.type, prod.num
HAVING num%5 = 0) mo

LEFT JOIN Pc p ON mo.model = p.model
LEFT JOIN Laptop lap ON mo.model = lap.model
LEFT JOIN Printer prin ON mo.model = prin.model

GROUP BY mo.num, mo.type
138.!!!!!!!!!!
139.WITH
dsShips AS
   (SELECT name, 
           IIF(launched IS NULL,
               (SELECT MIN(s_in.launched) 
                FROM Ships s_in 
                WHERE s.class = s_in.name and 
                      s_in.launched IS NOT NULL
                ),
                launched
               ) launched_ship
     FROM Ships s  
)
SELECT 
     dsShips.name, 
     STRING_AGG(b.name,',') WITHIN GROUP (ORDER BY b.date)       
FROM 
     dsShips 
     LEFT JOIN Battles b 
     ON YEAR(b.date) < dsShips.launched_ship 
WHERE 
    dsShips.name NOT IN (SELECT ship FROM Outcomes)
GROUP BY dsShips.name
140.!!!!
141.!!!
142.select [p].[name]--, [t1].[pc], [t2].[tc]
from [dbo].[Passenger] [p]
cross apply (select count(distinct [plane]) as [pc] from [dbo].[Trip] [t] join [dbo].[Pass_in_trip] [pit] on [t].[trip_no] = [pit].[trip_no]
			where [pit].[ID_psg] = [p].[ID_psg]) as t1
cross apply (select count(ltrim(rtrim([t].[town_to]))) as [tc]
			from [dbo].[Pass_in_trip] [pit] join [dbo].[Trip] [t] on [pit].[trip_no] = [t].[trip_no]
			where [pit].[ID_psg] = [p].[ID_psg]
			group by [t].[town_to]) as t2
where [t1].[pc] = 1 and [t2].[tc] >= 2
group by [p].[ID_psg],  [p].[name]
143.select [b].[name],
	format([b].[date],'yyyy-MM-dd'),
	format(dateadd(dy,datediff(dy, '17530105', eomonth([b].[date],0))/7*7, '17530105'), 'yyyy-MM-dd') as [lf]
from [dbo].[Battles] [b]
144.WITH 
dsMakersMaxPrice AS
   (SELECT
        p.maker        
    FROM 
        PC,
        Product p
    WHERE 
        price in (SELECT MAX(price) FROM PC) AND
        p.model = PC.model
   ),
dsMakersMinPrice AS
   (SELECT
        p.maker        
    FROM 
        PC,
        Product p
    WHERE 
        price in (SELECT MIN(price) FROM PC) AND
        p.model = PC.model
   )
SELECT
    DISTINCT p.maker
FROM 
    Product p
WHERE 
    p.maker in (SELECT maker FROM dsMakersMinPrice) and
    p.maker in (SELECT maker FROM dsMakersMaxPrice)
145.!!!
146.SELECT CHARACTER, VALUE
FROM 
(
 SELECT CAST (model AS VARCHAR(MAX)) AS model,
        CAST (speed AS VARCHAR(MAX)) AS speed,
        CAST (ram AS VARCHAR(MAX)) AS ram,
        CAST (hd AS VARCHAR(MAX)) AS hd,
        CAST (cd AS VARCHAR(MAX)) AS cd,
        CAST (ISNULL (CAST (price AS VARCHAR(MAX)) ,'') AS VARCHAR(MAX)) AS price 
        
 FROM PC 
 WHERE code IN (SELECT MAX (code)
                FROM PC)
) chartable
 
UNPIVOT
( VALUE FOR CHARACTER IN (model,speed,ram,hd,cd,price)) AS unpvt
147.SELECT count(*) OVER (order by c.countM DESC, c.maker,c.model) no, c.maker, c.model
FROM (SELECT count(*) OVER(partition by maker) countM, maker,model
      FROM product) c
148.select [ship],
stuff(
	[ship],
	charindex(' ', [ship]) + 1,
	datalength([ship]) - charindex(' ',reverse([ship])) - charindex(' ', [ship]),
	replicate('*', datalength([ship]) - charindex(' ',reverse([ship])) - charindex(' ', [ship]))) as [rt]
from [dbo].[Outcomes] [o]
where (datalength(ship) - datalength(replace(ship, ' ', '')) ) > 1
149.!!!
150.!!!
151. with shipslist (shipname, launched, battlename, [date]) as
(
select ships.name as 'shipname', launched, battles.name as 'battlename', battles.[date] from ships left join battles
on launched is null or launched <= datepart(year, [date])
),
battlelist (shipname, launched, battlename) as
(
select shipname, min(launched), (select top 1 battlename from shipslist l where outerlist.shipname = l.shipname order by [date] desc) from shipslist outerlist where launched IS NULL group by shipname
UNION ALL
select shipname, min(launched), (select top 1 battlename from shipslist l where outerlist.shipname = l.shipname order by ISNULL([date], '1800-01-01')) from shipslist outerlist where launched IS NOT NULL group by shipname
)
select * from battlelist
152.WITH CTE AS
(SELECT COUNT(model) grp FROM product WHERE type='printer'),
CTE2 AS
(SELECT xuy-(cte.grp*((xuy-1)/cte.grp)) num, model,type,2 pizda
FROM (SELECT model, row_number() over(ORDER BY model) xuy, type FROM product WHERE type = 'pc')a,cte
UNION ALL
SELECT ROW_NUMBER() over(ORDER BY model), model,type, 1 FROM product WHERE type='printer')

SELECT row_number() over(ORDER BY num, pizda, model), model, type
FROM CTE2 ORDER BY num, pizda, model
153.with tab as (select p.id_psg, p.name, pit.trip_no, pit.date, pit.place,
                    row_number() over(partition by p.id_psg order by pit.date, t.time_out) num
             from passenger p
                 join pass_in_trip pit on pit.id_psg = p.id_psg
                 join trip t on t.trip_no = pit.trip_no)
 
select t1.name
from tab t1
    join tab t2 on t2.id_psg = t1.id_psg and t2.place = t1.place and t2.num = t1.num + 1
group by t1.id_psg, t1.name
154.!!!
155.with cte as (select trip_no,
                    cast(trip_no as integer) num,
                    cast('' as varchar(max)) str
             from trip
             union all
             select trip_no, num / 2, concat(num % 2, str)
             from cte
             where num <> 0)
 
select trip_no, str trip_no_bit
from cte
where num = 0
156.WITH 
dsQ AS
(
SELECT
   ROW_NUMBER() OVER(ORDER BY q_id) - (ROW_NUMBER() OVER(ORDER BY q_id) + 2) % 3 id, 
   IIF((ROW_NUMBER() OVER(ORDER BY q_id) + 2) % 3 = 0,q_id,0) id1,
   IIF((ROW_NUMBER() OVER(ORDER BY q_id) + 1) % 3 = 0,q_id,0) id2,
   IIF((ROW_NUMBER() OVER(ORDER BY q_id) + 0) % 3 = 0,q_id,0) id3
FROM
   utQ
)
SELECT 
   IIF(SUM(id1) = 0,NULL,SUM(id1)), 
   IIF(SUM(id2) = 0,NULL,SUM(id2)), 
   IIF(SUM(id3) = 0,NULL,SUM(id3))
FROM 
   dsQ
GROUP BY 
   id
157. (4 балл)
158. !!!
159. (4 балл)
160. (4 балл)
161.!!!
